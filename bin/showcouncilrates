#!/usr/bin/perl

use warnings;
use strict;

use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../commonlib/perllib";

use mySociety::DBHandle qw(dbh);

use mySociety::MaPit;
use FixMyStreet::Geocode::OSM;

BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
    mySociety::DBHandle::configure(
        Name => mySociety::Config::get('BCI_DB_NAME'),
        User => mySociety::Config::get('BCI_DB_USER'),
        Password => mySociety::Config::get('BCI_DB_PASS'),
        Host => mySociety::Config::get('BCI_DB_HOST', undef),
        Port => mySociety::Config::get('BCI_DB_PORT', undef)
    );
}

my $query = "SELECT council, COUNT(*) AS total, SUM(fixed) AS fixed
  FROM (SELECT council,
        CASE WHEN state = 'fixed' THEN 1 ELSE 0 END AS fixed
        FROM problem WHERE confirmed IS NOT NULL AND
        state IN ('fixed', 'confirmed') AND
        whensent < NOW() - INTERVAL '4 weeks') AS a
  GROUP BY council";

my $stats = dbh()->selectall_arrayref($query, { Slice => {} });

my @councils;
foreach my $row (@$stats) {
    if ($row->{council}) {
        $row->{council} =~ s/\|.*//g;
        my @council_ids = split(/,/, $row->{council});
        push(@councils, @council_ids);
        $row->{council} = \@council_ids;
    }
}
my $areas_info = mySociety::MaPit::call('areas', \@councils);
my %adminsum;
my %adminfixed;
foreach my $row (@$stats){
    if ($row->{council}) {
        my @council_names = map { $areas_info->{$_}->{name} } @{$row->{council}} ;
        for my $council (@council_names) {
            $adminsum{$council} = $row->{total};
            $adminfixed{$council} = $row->{fixed};
        }
    }
}

foreach my $council (sort sort_councils keys %adminsum) {
    my $total = $adminsum{$council};
    my $fixed = $adminfixed{$council};
    printf("%5.1f %4d %s\n", 100 * $fixed / $total, $total, $council);
}

sub sort_councils {
    my $retval = ($adminfixed{$b} / $adminsum{$b}) <=>
        ($adminfixed{$a} / $adminsum{$a});
    $retval = $adminsum{$b} <=> $adminsum{$a} unless $retval;
    return $retval;
}
